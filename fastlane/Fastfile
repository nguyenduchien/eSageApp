# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

default_platform(:ios)

platform :ios do

    projectPath = "App/eSageApp.xcodeproj"
    teamId = "LQQPYJBXWS"
    bundleId = "hiennguyen.eSageApp"
    plistPath = "App/SupportingFiles/Info.plist"
    envName = ""
    outputName = "eSageApp.ipa"
  
    scheme = ""
    environment = ""
    configuration = ""
    exportMethod = ""
    provisioningProfile = ""
    tag_name = ""
    codeSign = "iPhone Distribution"
  
    GITHUB_REPO_NAME = "nguyenduchien/eSageApp"
    VERSION_PATTERN = /((\d+\.)(\d+\.)(\*|\d+))/


    lane :get_certs_and_provisionings do
        match(type: "development", readonly: true)
        match(type: "adhoc", readonly: true)
    end

      lane :update_certs_and_provisionings do
        match(type: "development", force_for_new_devices: true)
        match(type: "adhoc", force_for_new_devices: true)
    end

    private_lane :build do
        disable_automatic_code_signing(path: projectPath)
        gym(
            scheme: scheme,
            export_team_id: teamId,
            export_method: exportMethod,
            configuration: configuration,
            output_name: outputName,
            clean: true,
            xcargs: 'CODE_SIGN_IDENTITY="' + codeSign + '"',
            export_options: {
                manageAppVersionAndBuildNumber: false,
                provisioningProfiles: {
                    bundleId => provisioningProfile
                }
            }
        )
    end

    private_lane :update_provisioning_specifier do
      update_provisioning_profile_specifier(
        new_specifier: provisioningProfile,
        xcodeproj: projectPath,
        configuration: configuration,
        target: "eSageApp"
      )
  end

    private_lane :update_build_version do
        buildtime = Time.now.strftime("%m-%d %H-%M")
    
        appVersion = get_version_number(
          xcodeproj: projectPath,
          configuration: configuration,
          target: "eSageApp"
        )
        versions = appVersion.split(".")
        versions.pop()
        fixedVersions = versions.push(buildtime)
        fixedBuildVersion = fixedVersions.join(".")
    
        update_info_plist(
          xcodeproj: projectPath,
          plist_path: plistPath,
          block: lambda { |plist|
            plist["CFBundleVersion"] = fixedBuildVersion
          }
        )
    end
end
