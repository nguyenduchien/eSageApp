//
// eSageApp-Shared.xcconfig
//
// Generated by BuildSettingExtractor on 08/05/2023
// https://buildsettingextractor.com
//

// Primary App Icon Set Name
// 
// Name of an app icon set for the target's default app icon. The contents will be merged
// into the `Info.plist`.

ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon


// Enable Modules (C and Objective-C)
//
// Enables the use of modules for system APIs. System headers are imported as semantic
// modules instead of raw headers. This can result in faster builds and project indexing.

CLANG_ENABLE_MODULES = YES


// Code Signing Style
// 
// This setting specifies the method used to acquire and locate signing assets. Choose
// `Automatic` to let Xcode automatically create and update profiles, app IDs, and
// certificates. Choose `Manual` to create and update these yourself on the developer
// website.

CODE_SIGN_STYLE = Manual



// Development Team
// 
// The team ID of a development team to use for signing certificates and provisioning
// profiles.

DEVELOPMENT_TEAM = LQQPYJBXWS



// Enable Bitcode
//
// Activating this setting indicates that the target or project should generate bitcode
// during compilation for platforms and architectures that support it. For Archive
// builds, bitcode will be generated in the linked binary for submission to the App
// Store. For other builds, the compiler and linker will check whether the code complies
// with the requirements for bitcode generation, but will not generate actual bitcode.

ENABLE_BITCODE = NO



// Info.plist File
//
// The project-relative path to the property list file that contains the `Info.plist`
// information used by bundles. For details on information property list files, see
// [Information Property
// List](https://developer.apple.com/documentation/bundleresources/information_property_list).

INFOPLIST_FILE = App/SupportingFiles/Info.plist



// Runpath Search Paths
// 
// This is a list of paths to be added to the `runpath` search path list for the image
// being created. At runtime, `dyld` uses the `runpath` when searching for dylibs whose
// load path begins with `@rpath/`. See [Dynamic Library Programming
// Topics](https://developer.apple.com/library/content/documentation/DeveloperTools/Conceptual/DynamicLibraries/000-Introduction/Introduction.html).

LD_RUNPATH_SEARCH_PATHS = $(inherited) @executable_path/Frameworks


//MAPBOX_TOKEN =



// Product Bundle Identifier
// 
// A string that uniquely identifies the bundle. The string should be in reverse DNS
// format using only alphanumeric characters (`A-Z`, `a-z`, `0-9`), the dot (`.`), and
// the hyphen (`-`). This value is used as the `CFBundleIdentifier` in the `Info.plist`
// of the built bundle.

PRODUCT_BUNDLE_IDENTIFIER = hiennguyen.eSageApp



// Product Name
// 
// This is the basename of the product generated by the target.

PRODUCT_NAME = $(TARGET_NAME)


// Import Paths
//
// A list of paths to be searched by the Swift compiler for additional Swift modules.

SWIFT_INCLUDE_PATHS = $(inherited)


// Swift Language Version
// 
// The language version used to compile the target's Swift code.

SWIFT_VERSION = 5.0



// Targeted Device Families
// 
// The build system uses the selected device to set the correct value for the
// `UIDeviceFamily` key it adds to the target's `Info.plist` file. This also drives the
// --target-device flag to actool, which determines the idioms selected during catalog
// compilation.

TARGETED_DEVICE_FAMILY = 1


VALIDATE_WORKSPACE = NO


// Scan-TechnicalDebt scheme-related support.
//INTERMEDIATES_OUTPUT_DIR = ${PROJECT_DIR}/build/intermediates/${CONFIGURATION}/
//SCHEME_FILE = ${INTERMEDIATES_OUTPUT_DIR}current_scheme.txt



//APP_VERSION



//API
BASE_URL = https:\/\/eSage.dev\/api/dev

API_KEY = abcd1234

WEBVIEW_URL = https:\/\/eSage.dev
